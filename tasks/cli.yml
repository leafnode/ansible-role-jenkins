---
# Handle plugins
# If Jenkins is installed or updated, wait for pulling the Jenkins CLI
- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  wait_for: port=8080 delay={{ startup_delay_s | default(30) }}
  when: jenkins_install.changed

# Create Jenkins CLI destination directory
- name: "Create Jenkins CLI destination directory: ${jenkins.dest}"
  become: yes
  file:
    path: "{{ jenkins_dest }}"
    state: directory

# Get Jenkins CLI from localhost
- name: Get Jenkins CLI
  become: yes
  get_url:
    url: http://localhost:8080/jnlpJars/jenkins-cli.jar
    dest: "{{ jenkins.cli_dest }}"
    mode: 0440

- name: Change owner of Jenkins CLI
  become: yes
  file:
    path: "{{ jenkins.cli_dest }}"
    owner: jenkins
    group: jenkins

- name: Check if Jenkins updates are installed
  stat:
    path: "{{ jenkins.updates_dest }}"
  register: jenkins_updates

# Get latest Jenkins update file
- name: Get Jenkins updates
  become: yes
  get_url:
    url: http://updates.jenkins-ci.org/update-center.json
    dest: "{{ jenkins.updates_dest }}"
    thirsty: yes
    mode: 0440
  when: jenkins_updates.stat.exists == false

# Jenkins Update-center
- name: Update-center Jenkins
  become: yes
  action: "shell cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack"
  when: jenkins_updates.stat.exists == false
  notify:
    - 'Restart Jenkins'
